---
- name: Gather facts for Templates
  hosts: localhost
  connection: local
  vars:
    template_name: test-template
    vm_name: template-vm
  tasks:
    - name: Check for known open issues
      include_tasks: known_issues.yaml
      vars:
        current_playbook: template

    - name: Create template test-template
      kubevirt_template:
        state: present
        name: "{{ template_name }}"
        namespace: default
        display_name: Generic cirros template
        description: Basic cirros template
        long_description: Verbose description of cirros template
        provider_display_name: Just Be Cool, Inc.
        documentation_url: http://theverycoolcompany.com
        support_url: http://support.theverycoolcompany.com
        icon_class: icon-linux
        default_disk:
          disk:
            bus: virtio
          name: default-disk
        default_nic:
          name: default-nic
          bridge: {}
        default_network:
          name: default
          pod: {}
        default_volume:
          name: default-volume
          containerDisk:
            image: kubevirt/cirros-container-disk-demo:latest
        objects:
          - name: ${NAME}
            kind: VirtualMachine
            memory: ${MEMORY_SIZE}
            state: present
            namespace: vms
        parameters:
          - name: NAME
            description: VM name
            generate: expression
            from: 'vm-[A-Za-z0-9]{8}'
          - name: MEMORY_SIZE
            description: Memory size
            value: 1Gi

    - name: Create a VM
      kubevirt_vm:
        state: running
        name: "{{ vm_name }}"
        namespace: default
        template: "{{ template_name }}"
        template_parameters:
          name: test-vm
      register: result
      failed_when: result.changed != true or not result.method in ('create', 'apply') or result.kubevirt_vm.status.ready != true

    - name: "Delete VM"
      kubevirt_vm:
        state: absent
        name: "{{ vm_name }}"
        namespace: default
      register: result
      failed_when: result.changed != true or result.method != 'delete'

    - name: "Delete template"
      kubevirt_template:
        state: absent
        name: "{{ template_name }}"
        namespace: default
