notifications:
  email:
    recipients:
      - mmazur@redhat.com
      - omachace@redhat.com
    on_success: never
    on_failure: always

dist: xenial
sudo: required
language: python
python:
  - "3.7"

branches:
  only:
    - master

cache:
  pip: yes
  directories:
  - cache
  - "~/.minikube/cache"

# If you trigger a custom build with a custom config like this:
#   env: ANSIBLE_SOURCE=pr/9999
# then ansible from ansible.git's PR 9999 will be installed and used for executing the playbook
env:
  global: # Make sure there are defaults for each matrix var
    - TEST=playbooks/all.yml
    - ANSIBLE_SOURCE=pip
    - LATEST_KUBEVIRT_VER=$(curl -s https://github.com/kubevirt/kubevirt/releases/latest | grep -o "v[0-9]\.[0-9]*\.[0-9]*")
    - LATEST_CDI_VER=$(curl -s https://github.com/kubevirt/containerized-data-importer/releases/latest | grep -o "v[0-9]\.[0-9]*\.[0-9]*")
  matrix:
    - ANSIBLE_SOURCE=pip                  TEST=playbooks/all.yml
    - ANSIBLE_SOURCE=branch/stable-2.8    TEST=playbooks/all.yml
    - ANSIBLE_SOURCE=branch/devel         TEST=playbooks/all.yml
    - ANSIBLE_SOURCE=branch/devel         TEST=roles/all.yml

install:
  - ci-common/install-ansible.sh $ANSIBLE_SOURCE
  - travis/install-cluster.sh

# travis_terminate: ok=0, fail=1, error=2+
# if minikube fails to start/deploy, that should be an error
script:
  - export CDI_VER=${CDI_VER:-$LATEST_CDI_VER}
  - export KUBEVIRT_VER=${KUBEVIRT_VER:-$LATEST_KUBEVIRT_VER}
  - ansible-playbook --version
  # Catch obvious errors before we spend the time on booting the cluster up:
  - ansible-playbook -vvv --syntax-check tests/$TEST || travis_terminate 1;
  # Error out if the cluster doesn't start. This can't be inside install:, because then running a
  # quick --syntax-check before the cluster starts wouldn't be doable:
  - travis/run-cluster.sh || travis_terminate 2;
  - ansible-playbook -vvv tests/$TEST

after_failure:
  - travis/print-debug-info.sh
